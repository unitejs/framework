"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Tests for ErrorHandler.
 */
const Chai = require("chai");
const errorHandler_1 = require("../../../../dist/helpers/errorHandler");
describe("ErrorHandler", () => {
    it("can be created", () => {
        const obj = new errorHandler_1.ErrorHandler();
        Chai.should().exist(obj);
    });
    describe("format", () => {
        it("can return unknown error when called with null", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format(null)).to.equal("unknown error");
        });
        it("can return unknown error when called with undefined", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format(undefined)).to.equal("unknown error");
        });
        it("can return the message when called with an Error", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format(new Error("the message"))).to.equal("the message");
        });
        it("can return the text when called with a string", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format("the message")).to.equal("the message");
        });
        it("can return the JSON when called with a number", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format(10)).to.equal(JSON.stringify(10));
        });
        it("can return the JSON when called with a boolean", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format(true)).to.equal(JSON.stringify(true));
        });
        it("can return the JSON when called with an object", () => {
            Chai.expect(errorHandler_1.ErrorHandler.format({ p1: true, p2: 10 })).to.equal(JSON.stringify({ p1: true, p2: 10 }, undefined, "\t"));
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Rlc3QvdW5pdC9zcmMvaGVscGVycy9lcnJvckhhbmRsZXIuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztHQUVHO0FBQ0gsNkJBQTZCO0FBQzdCLHVFQUFvRTtBQUVwRSxRQUFRLENBQUMsY0FBYyxFQUFFO0lBQ3JCLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRTtRQUNqQixNQUFNLEdBQUcsR0FBRyxJQUFJLDJCQUFZLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzdCLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLFFBQVEsRUFBRTtRQUNmLEVBQUUsQ0FBQyxnREFBZ0QsRUFBRTtZQUNqRCxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNyRSxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxxREFBcUQsRUFBRTtZQUN0RCxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUFZLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMxRSxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxrREFBa0QsRUFBRTtZQUNuRCxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUFZLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3ZGLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLCtDQUErQyxFQUFFO1lBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsMkJBQVksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzVFLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLCtDQUErQyxFQUFFO1lBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsMkJBQVksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN0RSxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxnREFBZ0QsRUFBRTtZQUNqRCxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUFZLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDMUUsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsZ0RBQWdELEVBQUU7WUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQywyQkFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN6SCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiaGVscGVycy9lcnJvckhhbmRsZXIuc3BlYy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGVzdHMgZm9yIEVycm9ySGFuZGxlci5cbiAqL1xuaW1wb3J0ICogYXMgQ2hhaSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgRXJyb3JIYW5kbGVyIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3NyYy9oZWxwZXJzL2Vycm9ySGFuZGxlclwiO1xuXG5kZXNjcmliZShcIkVycm9ySGFuZGxlclwiLCAoKSA9PiB7XG4gICAgaXQoXCJjYW4gYmUgY3JlYXRlZFwiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG9iaiA9IG5ldyBFcnJvckhhbmRsZXIoKTtcbiAgICAgICAgQ2hhaS5zaG91bGQoKS5leGlzdChvYmopO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoXCJmb3JtYXRcIiwgKCkgPT4ge1xuICAgICAgICBpdChcImNhbiByZXR1cm4gdW5rbm93biBlcnJvciB3aGVuIGNhbGxlZCB3aXRoIG51bGxcIiwgKCkgPT4ge1xuICAgICAgICAgICAgQ2hhaS5leHBlY3QoRXJyb3JIYW5kbGVyLmZvcm1hdChudWxsKSkudG8uZXF1YWwoXCJ1bmtub3duIGVycm9yXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdChcImNhbiByZXR1cm4gdW5rbm93biBlcnJvciB3aGVuIGNhbGxlZCB3aXRoIHVuZGVmaW5lZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBDaGFpLmV4cGVjdChFcnJvckhhbmRsZXIuZm9ybWF0KHVuZGVmaW5lZCkpLnRvLmVxdWFsKFwidW5rbm93biBlcnJvclwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoXCJjYW4gcmV0dXJuIHRoZSBtZXNzYWdlIHdoZW4gY2FsbGVkIHdpdGggYW4gRXJyb3JcIiwgKCkgPT4ge1xuICAgICAgICAgICAgQ2hhaS5leHBlY3QoRXJyb3JIYW5kbGVyLmZvcm1hdChuZXcgRXJyb3IoXCJ0aGUgbWVzc2FnZVwiKSkpLnRvLmVxdWFsKFwidGhlIG1lc3NhZ2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KFwiY2FuIHJldHVybiB0aGUgdGV4dCB3aGVuIGNhbGxlZCB3aXRoIGEgc3RyaW5nXCIsICgpID0+IHtcbiAgICAgICAgICAgIENoYWkuZXhwZWN0KEVycm9ySGFuZGxlci5mb3JtYXQoXCJ0aGUgbWVzc2FnZVwiKSkudG8uZXF1YWwoXCJ0aGUgbWVzc2FnZVwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoXCJjYW4gcmV0dXJuIHRoZSBKU09OIHdoZW4gY2FsbGVkIHdpdGggYSBudW1iZXJcIiwgKCkgPT4ge1xuICAgICAgICAgICAgQ2hhaS5leHBlY3QoRXJyb3JIYW5kbGVyLmZvcm1hdCgxMCkpLnRvLmVxdWFsKEpTT04uc3RyaW5naWZ5KDEwKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KFwiY2FuIHJldHVybiB0aGUgSlNPTiB3aGVuIGNhbGxlZCB3aXRoIGEgYm9vbGVhblwiLCAoKSA9PiB7XG4gICAgICAgICAgICBDaGFpLmV4cGVjdChFcnJvckhhbmRsZXIuZm9ybWF0KHRydWUpKS50by5lcXVhbChKU09OLnN0cmluZ2lmeSh0cnVlKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KFwiY2FuIHJldHVybiB0aGUgSlNPTiB3aGVuIGNhbGxlZCB3aXRoIGFuIG9iamVjdFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBDaGFpLmV4cGVjdChFcnJvckhhbmRsZXIuZm9ybWF0KHsgcDE6IHRydWUsIHAyOiAxMH0pKS50by5lcXVhbChKU09OLnN0cmluZ2lmeSh7IHAxOiB0cnVlLCBwMjogMTB9LCB1bmRlZmluZWQsIFwiXFx0XCIpKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcbiJdfQ==
